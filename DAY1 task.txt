1. HTTP1.1 VS HTTP2
http-Hyper Text Transfer Protocol
HTTP1.1:
-> It supports connection reuse and for every TCP connection there could be multiple 
requests and responses.
-> pipelining where the client can request several resources from the server at once.
-> HTTP1.1 provided support for chunk transfers that allowed streaming of content 
dynamically as chunks and for additional headers to be sent after the message body.
-> It is relatively secure since it uses digest authentication, NTLM authentication.
-> Expands on the caching support by using additional headers like cache-control, 
conditional headers like If-Match and by using entity tags.

HTTP2:
-> Uses multiplexing, where over a single TCP connection resources to be delivered 
are interleaved and arrive at the client almost at the same time.
->  It also provides a feature called server push that allows the server to send 
data that the client will need but has not yet requested.
-> Underlying semantics of HTTP such as headers, status codes remains the same.
-> HTTP2 does not change much in terms of caching. The server push feature if the 
client finds the resources are already present in the cache.
-> HTTP2 utilizes multiplexing and server push to effectively reduce the page load 
time by a greater margin along with being less sensitive to network delays.



2.Objects and its internal representation in javascript
  A JavaScript object is a collection of named values having state and behavior(properties and method)”.
  take a case of bike
   All bikes have the same properties, but the property values differ from bike to bike.
   Let’s have an example of bike and its properties(Features):
     Make:yamaha  
     Model:R15 version3
     Color: red
     Fuel: petrol
     cyl size: 154.9cc
     Mileage: 40Kmpl
     
     1)Objects:
      The following code assigns a simple value (Mercedes) to a variable named car:
      var bike = "yamaha";
      
      Objects are variables too. But objects can contain many values.
     
        Syntax:
           var <object-name> = {key1: value1, key2: value2,... keyN: valueN};
           
        So, conclusion and definition for JS objects is “JavaScript objects are containers for named values”.
        
     2)Object Properties
       The name:values pairs (in JavaScript objects) are called properties.
      The following code assigns many values (yamaha,R15 version3, red and soo on) to a variable named bike:
       var car = {Make: “yamaha”, Model: “R15 version3”, Color: “red”, Fuel: "petrol", cyl sizet: “154.9cc”, Mileage: “40Kmpl”};
        The values are written as name:value pairs (name and value separated by a colon).
        
